<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
       http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd   
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd   
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/data/jpa 
       http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 配置shiro框架 -->

	<!-- 配置用户名realm对象(将给spring管理) -->
	<bean id="usernameRealm" class="com.jt.sys.service.realm.ShiroUsernameRealm">
		<!-- 凭证匹配器(密码加密) -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
				<!-- <property name="hashIterations" value="1024"/> -->
			</bean>
		</property>
	</bean>
	<!-- 配置手机账号realm对象(将给spring管理) -->
	<bean id="mobileRealm" class="com.jt.sys.service.realm.ShiroMobileRealm">
		<!-- 凭证匹配器(密码加密) -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
				<!-- <property name="hashIterations" value="1024"/> -->
			</bean>
		</property>
	</bean>
	<!-- 配置手机账号realm对象(将给spring管理) -->
	<bean id="emailRealm" class="com.jt.sys.service.realm.ShiroEmailRealm">
		<!-- 凭证匹配器(密码加密) -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
				<!-- <property name="hashIterations" value="1024"/> -->
			</bean>
		</property>
	</bean>
	<!-- 配置多realm的验证策略 -->

	<bean id="authenticator" class="com.jt.sys.token.LoginModularRealmAuthenticator"> 
		<property name="authenticationStrategy">
		<!-- 三种认证策略 -->
			<!-- <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean> -->
		<!-- 	<bean class="org.apache.shiro.authc.pam.AllSuccessfulStrategy"></bean>  -->
			 <bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"></bean> 
		</property>
	</bean>

	<!-- 配置CacheManager对象(不是必须的,主要是为了提高性能,可以对认证信息以及授权信息进行缓存) -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- Set a net.sf.ehcache.CacheManager instance here if you already have 
			one. If not, a new one will be creaed with a default config: <property name="cacheManager" 
			ref="ehCacheManager"/> -->
		<!-- If you don't have a pre-built net.sf.ehcache.CacheManager instance 
			to inject, but you want a specific Ehcache configuration to be used, specify 
			that here. If you don't, a default will be used.: -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>
	<!-- 配置securityManager对象(此对象时shiro框架核心) -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager" />
		<property name="authenticator" ref="authenticator"></property>
		<property name="realms">
			<list>
				<ref bean="usernameRealm" />
				<ref bean="emailRealm" />
				<ref bean="mobileRealm" />
			</list>
		</property>
	</bean>
	<!-- 配置ShiroFilter(通过此filter的配置实现对请求资源的过滤,哪些请求要放行,哪些要认证) -->
	<bean id="shiroFilterBean" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的连接 -->
		<property name="loginUrl" value="/loginUI.do"></property>
		<!-- 登录成功后要跳转的连接(此处已经在登录中处理了) -->
		<!-- <property name="successUrl" value="/index.jsp"></property> -->
		<!-- 访问未对其授权的资源时,要跳转的连接 <property name="unauthorizedUrl" value="/default.html"></property> -->
		<!-- shiro连接约束配置 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置允许匿名访问 -->
				/bower_components/** = anon
				/build/** = anon
				/dist/** = anon
				/plugins/** = anon
				/doLogin.do = anon
				<!-- 退出 -->
				/doLogout.do = logout  <!-- 会调用Subject的logout方法,此方法会将session清空 -->
				<!-- 剩余其他路径，必须认证通过才可以访问 -->
				/** = authc
			</value>
		</property>
	</bean>

	<!--Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!--启用shiro注解权限检查(@RequestPermissions) -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>